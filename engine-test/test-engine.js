const _ENV={hyperengine:null},_TEST_DIAGRAM_A={run:()=>{const{engine:e}=_ENV.hyperengine,n=e.diagramInfo();console.log("Diagram info",{_info:n}),e.diagramProcess.addExternalProcess({id:"doSomething",process:({engine:e,data:n})=>{console.log("Process dosomething",{engine:e,data:n})}}),e.flowSignals.notifySignal({signal:"start"})}},_TEST_DIAGRAM_B={run:()=>{const{engine:e}=_ENV.hyperengine,n=e.diagramInfo();console.log("Diagram info",{_info:n}),e.diagramProcess.addExternalProcess({id:"doSomething",process:({engine:e,data:n})=>{console.log("Process dosomething",{engine:e,data:n}),n.dataOUT.state01.newprop="somevalue",e.dataControl.updateOutputDATA()}}),e.diagramProcess.addExternalProcess({id:"moreThings",process:({engine:e,data:n})=>{console.log("Process moreThings",{engine:e,data:n})}}),e.flowSignals.notifySignal({signal:"start"})}},_ENGINE_TESTS={init:()=>{console.log("Engine tests",{hyperengine:window.HyperEngine}),_ENV.hyperengine=window.HyperEngine,_ENV.hyperengine.diagram.node.init(),_ENV.hyperengine.engine.init({hyperdiagram:_ENV.hyperengine.diagram})},loadDiagram:async({url:e})=>fetch(e).then((e=>e.json())).then((e=>{_ENV.hyperengine.engine.dataControl.clearDATA(),_ENV.hyperengine.engine.flowSignals.clearSignals(),_ENV.hyperengine.engine.diagramProcess.clearExternalProcesses(),_ENV.hyperengine.diagram.loadDATA({data:e}),_ENV.hyperengine.engine.diagramProcess.processDiagram()}))};document.addEventListener("DOMContentLoaded",(async()=>{_ENGINE_TESTS.init(),await _ENGINE_TESTS.loadDiagram({url:"./hyperdiagram-data-A.json"}),_TEST_DIAGRAM_A.run(),await _ENGINE_TESTS.loadDiagram({url:"./hyperdiagram-data-B.json"}),_TEST_DIAGRAM_B.run()}));